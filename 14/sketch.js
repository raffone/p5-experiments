// Generated by LiveScript 1.2.0
var canvasWidth, canvasHeight, canvasMargin, halfWidth, halfHeight, circleR, colorRange, debug, setup, keyPressed, mousePressed;
canvasWidth = 500;
canvasHeight = 500;
canvasMargin = 0;
halfWidth = canvasWidth * 0.5;
halfHeight = canvasHeight * 0.5;
circleR = 250;
colorRange = 255;
debug = true;
setup = function(){
  var steps, quaterSteps, inc, points, i$, i, x, y, pairs, to$, right, left, ellipseWidth, ellipseHeight, ellipseHeightOffset;
  createCanvas(canvasWidth, canvasHeight);
  clear();
  background(0);
  fill(0);
  /*
  stroke 255
  ellipse halfWidth,
          halfHeight,
          circleR * 2,
          circleR * 2
  */
  steps = 44;
  quaterSteps = steps * 0.25;
  inc = PI / (steps / 2);
  points = [];
  for (i$ = 0; i$ < steps; ++i$) {
    i = i$;
    x = circleR + circleR * sin(inc * i) + canvasMargin;
    y = circleR + circleR * cos(inc * i) + canvasMargin;
    fill(255);
    ellipse(x, y, 4, 4);
    points.push({
      x: x,
      y: y
    });
  }
  console.log(points);
  console.log(points.length);
  pairs = [];
  for (i$ = 0, to$ = points.length * 0.5; i$ <= to$; ++i$) {
    i = i$;
    if (i === 0 || i === points.length * 0.5) {
      right = points[i];
      left = points[i];
    } else {
      right = points[i];
      left = points[points.length - i];
    }
    pairs.push({
      right: right,
      left: left
    });
  }
  console.log(pairs);
  console.log(pairs.length);
  noFill();
  for (i$ = 1, to$ = pairs.length - 1; i$ < to$; ++i$) {
    i = i$;
    ellipseWidth = circleR * 2 - pairs[i].left.x * 2;
    ellipseHeight = (pairs[i - 1].left.y - pairs[i + 1].left.y) * 0.5;
    ellipseHeightOffset = 0;
    stroke(255, 0, 0);
    ellipse(circleR + canvasMargin, (pairs[i].left.y + ellipseHeightOffset) + canvasMargin, ellipseWidth, ellipseHeight);
    stroke(0, 255, 0);
    ellipse(circleR + canvasMargin, (pairs[i].left.y + ellipseHeightOffset) + canvasMargin, 2, 2);
  }
  /*
  
    #------------------------------------------------------------
  
    if debug
      stroke 255
  
      line pairs[i].left.y + canvasMargin, pairs[i].left.x + canvasMargin,
           pairs[i].right.y + canvasMargin, pairs[i].right.x + canvasMargin
  
      line pairs[i].left.x + canvasMargin, pairs[i].left.y + canvasMargin,
           pairs[i].right.x + canvasMargin, pairs[i].right.y + canvasMargin
  */
};
keyPressed = mousePressed = function(){
  return noLoop();
};
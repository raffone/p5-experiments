// Generated by LiveScript 1.2.0
var canvasWidth, canvasHeight, canvasMargin, halfWidth, halfHeight, circleDiag, circleRad, colorRange, debug, molt, setup, keyPressed, mousePressed;
canvasWidth = 500;
canvasHeight = 500;
canvasMargin = 50;
halfWidth = canvasWidth * 0.5;
halfHeight = canvasHeight * 0.5;
circleDiag = canvasWidth - canvasMargin * 2;
circleRad = circleDiag * 0.5;
colorRange = 255;
debug = true;
molt = 2;
setup = function(){
  var steps, quaterSteps, inc, points, i$, i, x, y, to$, pairs, right, left, ellipseWidth, ellipseHeight, ellipseHeightOffset;
  createCanvas(canvasWidth, canvasHeight);
  clear();
  background(0);
  fill(0);
  /*
  stroke 255
  ellipse halfWidth,
          halfHeight,
          circleR * 2,
          circleR * 2
  */
  steps = 44;
  quaterSteps = steps * 0.25;
  inc = PI / (steps / 2);
  points = [];
  for (i$ = 0; i$ < steps; ++i$) {
    i = i$;
    x = circleRad + circleRad * sin(inc * i) + canvasMargin;
    y = circleRad + circleRad * 0.5 * cos(inc * i) + canvasMargin;
    if (debug) {
      fill(255);
      ellipse(x, y, 4, 4);
    }
    points.push({
      x: x,
      y: y
    });
  }
  if (debug) {
    for (i$ = 1, to$ = points.length; i$ < to$; ++i$) {
      i = i$;
      stroke(0, 80, 80);
      line(points[i].x, points[i].y, points[i - 1].x, points[i - 1].y);
    }
  }
  pairs = [];
  for (i$ = 0, to$ = points.length * 0.5; i$ <= to$; ++i$) {
    i = i$;
    if (i === 0 || i === points.length * 0.5) {
      right = points[i];
      left = points[i];
    } else {
      right = points[i];
      left = points[points.length - i];
    }
    pairs.push({
      right: right,
      left: left
    });
  }
  noFill();
  console.log(points[points.length / 2]);
  console.log(points[0]);
  console.log(points[0].y - points[points.length / 2].y);
  for (i$ = 1, to$ = pairs.length - 1; i$ < to$; ++i$) {
    i = i$;
    ellipseWidth = pairs[i].left.x - pairs[i].right.x;
    ellipseHeight = (pairs[i - 1].left.y - pairs[i + 1].left.y) * 0.5;
    ellipseHeightOffset = 0;
    stroke(255, 0, 0);
    ellipse(halfWidth, pairs[i].left.y, ellipseWidth, ellipseHeight * 24);
    console.log(ellipseHeight, ellipseHeight * 24, round(ellipseHeight + ellipseHeight * 24));
    if (debug) {
      stroke(0, 150, 255);
      ellipse(halfWidth, pairs[i].left.y, 2, 2);
    }
  }
  if (debug) {
    stroke(0, 255, 0);
    ellipse(halfWidth, halfHeight, circleDiag, circleDiag);
  }
  /*
  
    #------------------------------------------------------------
  
    if debug
      stroke 255
  
      line pairs[i].left.y + canvasMargin, pairs[i].left.x + canvasMargin,
           pairs[i].right.y + canvasMargin, pairs[i].right.x + canvasMargin
  
      line pairs[i].left.x + canvasMargin, pairs[i].left.y + canvasMargin,
           pairs[i].right.x + canvasMargin, pairs[i].right.y + canvasMargin
  */
};
keyPressed = mousePressed = function(){
  return noLoop();
};
// Generated by LiveScript 1.2.0
var canvasWidth, canvasHeight, canvasMargin, halfWidth, halfHeight, circleDiag, circleRad, colorRange, count1, count2, drawCircle, setPixel, setup, draw, keyPressed, mousePressed;
canvasWidth = 400;
canvasHeight = 400;
canvasMargin = 50;
halfWidth = canvasWidth * 0.5;
halfHeight = canvasHeight * 0.5;
circleDiag = canvasWidth - canvasMargin * 2;
circleRad = circleDiag * 0.5;
colorRange = 255;
count1 = 0;
count2 = Math.PI;
drawCircle = function(x0, y0, x1, y1){
  var a, b, b1, dx, dy, err, e2;
  a = abs(x1 - x0);
  b = abs(y1 - y0);
  b1 = b & 1;
  dx = 4 * (1 - a) * b * b;
  dy = 4 * (b1 + 1) * a * a;
  err = dx + dy + b1 * a * a;
  e2 = 0;
  if (x0 > x1) {
    x0 = x1;
    x1 += a;
  }
  if (y0 > y1) {
    y0 = y1;
  }
  y0 += (b + 1) / 2;
  y1 = y0 - b1;
  a *= 8 * a;
  b1 = 8 * b * b;
  do {
    setPixel(x1, y0);
    setPixel(x0, y0);
    setPixel(x0, y1);
    setPixel(x1, y1);
    e2 = 2 * err;
    if (e2 <= dy) {
      y0++;
      y1--;
      err += dy += a;
    }
    if (e2 >= dx || 2 * err > dy) {
      x0++;
      x1--;
      err += dx += b1;
    }
  } while (x0 <= x1);
  while (y0 - y1 < b) {
    setPixel(x0 - 1, y0);
    setPixel(x1 + 1, y0++);
    setPixel(x0 - 1, y1);
    setPixel(x1 + 1, y1--);
  }
};
setPixel = function(x, y, color, opacity){
  if (x >= 0 && y >= 0 && x <= canvasWidth && y <= canvasHeight) {
    x = floor(x) * 4;
    y = (floor(y) * canvasWidth) * 4;
    opacity = 0;
    color = [255, 255, 255];
    pixels[x + y] = color[0] - opacity;
    pixels[x + y + 1] = color[1] - opacity;
    pixels[x + y + 2] = color[2] - opacity;
  }
};
setup = function(){
  createCanvas(canvasWidth, canvasHeight);
};
draw = function(){
  var molt1, molt2, steps, quaterSteps, inc, points, i$, i, x, y, pairs, to$, right, left, incColor, ellipseWidth, ellipseHeight, color, res$, j$;
  molt1 = 0.4 + (0.4 + 0.2 * cos(count1));
  molt2 = 2 + (18 + 18 * cos(count2));
  background(0);
  loadPixels();
  steps = 88;
  quaterSteps = steps * 0.25;
  inc = PI / (steps * 0.5);
  points = [];
  for (i$ = 0; i$ < steps; ++i$) {
    i = i$;
    x = circleRad + circleRad * sin(inc * i) + canvasMargin;
    y = circleRad + circleRad * molt1 * cos(inc * i) + canvasMargin;
    points.push({
      x: x,
      y: y
    });
  }
  pairs = [];
  for (i$ = 0, to$ = points.length * 0.5; i$ <= to$; ++i$) {
    i = i$;
    if (i === 0 || i === points.length * 0.5) {
      right = points[i];
      left = points[i];
    } else {
      right = points[i];
      left = points[points.length - i];
    }
    pairs.push({
      right: right,
      left: left
    });
  }
  incColor = 255 / (steps * 0.5);
  for (i$ = 1, to$ = pairs.length - 1; i$ < to$; ++i$) {
    i = i$;
    ellipseWidth = pairs[i].left.x - pairs[i].right.x;
    ellipseHeight = (((pairs[i - 1].left.y - pairs[i + 1].left.y) * 0.5) * molt2) * 0.5;
    res$ = [];
    for (j$ = 0; j$ < 3; ++j$) {
      res$.push(incColor * i);
    }
    color = res$;
    drawCircle(pairs[i].left.x, pairs[i].left.y - ellipseHeight, pairs[i].right.x, pairs[i].right.y + ellipseHeight);
  }
  count1 += PI / 180;
  count2 += PI / 180;
  updatePixels();
};
keyPressed = mousePressed = function(){
  return noLoop();
};
// Generated by LiveScript 1.2.0
var canvasSize, pixelSize, colorRange, currShape, reverse, shapes, position, res$, i$, lresult$, j$, getShape, getCoord, setup, draw, mousePressed, mouseDragged, keyPressed;
canvasSize = 256;
pixelSize = 8;
colorRange = 100;
currShape = 0;
reverse = false;
shapes = [[[0, 0, 0], [0, 2, 0], [0, 0, 0]], [[2, 2, 2], [2, 1, 2], [2, 2, 2]], [[0, 2, 2, 2, 0], [2, 1, 1, 1, 2], [2, 1, 2, 1, 2], [2, 1, 1, 1, 2], [0, 2, 2, 2, 0]], [[0, 0, 2, 2, 2, 0, 0], [0, 2, 1, 1, 1, 2, 0], [2, 1, 1, 2, 1, 1, 2], [2, 1, 2, 1, 2, 1, 2], [2, 1, 1, 2, 1, 1, 2], [0, 2, 1, 1, 1, 2, 0], [0, 0, 2, 2, 2, 0, 0]], [[0, 0, 0, 2, 2, 2, 0, 0, 0], [0, 2, 2, 1, 1, 1, 2, 2, 0], [0, 2, 1, 1, 1, 1, 1, 2, 0], [2, 1, 1, 2, 2, 2, 1, 1, 2], [2, 1, 1, 2, 1, 2, 1, 1, 2], [2, 1, 1, 2, 2, 2, 1, 1, 2], [0, 2, 1, 1, 1, 1, 1, 2, 0], [0, 2, 2, 1, 1, 1, 2, 2, 0], [0, 0, 0, 2, 2, 2, 0, 0, 0]]];
res$ = [];
for (i$ = 0; i$ <= canvasSize; ++i$) {
  lresult$ = [];
  for (j$ = 0; j$ <= canvasSize; ++j$) {
    lresult$.push(0);
  }
  res$.push(lresult$);
}
position = res$;
getShape = function(){
  var shape;
  shape = shapes[floor(currShape)];
  shape.size = -((shape.length - 1) / 2) * pixelSize;
  if (reverse === false) {
    currShape += 0.1;
  }
  if (reverse === true) {
    currShape -= 0.1;
  }
  if (floor(currShape) === shapes.length - 1) {
    reverse = true;
  }
  if (floor(currShape) === 0) {
    reverse = false;
  }
  return shape;
};
getCoord = function(basePos, shapeSize, mult){
  return basePos + (shapeSize + pixelSize * mult);
};
setup = function(){
  createCanvas(canvasSize, canvasSize);
  colorMode(HSB, colorRange);
  noStroke();
};
draw = function(){
  var i$, step$, to$, y, j$, step1$, to1$, x;
  for (i$ = 0, to$ = canvasSize, step$ = pixelSize; step$ < 0 ? i$ > to$ : i$ < to$; i$ += step$) {
    y = i$;
    for (j$ = 0, to1$ = canvasSize, step1$ = pixelSize; step1$ < 0 ? j$ > to1$ : j$ < to1$; j$ += step1$) {
      x = j$;
      fill(lerp(60, 100, position[x][y] / colorRange), colorRange, position[x][y]);
      rect(x, y, pixelSize, pixelSize);
      if (position[x][y] > 0) {
        position[x][y] -= 2;
      }
    }
  }
};
mousePressed = mouseDragged = function(){
  var baseX, baseY, shape, i$, to$, shapeX, j$, to1$, shapeY, posX, posY;
  if (mouseX >= 0 && mouseX <= canvasSize && mouseY >= 0 && mouseY <= canvasSize) {
    baseX = mouseX - mouseX % pixelSize;
    baseY = mouseY - mouseY % pixelSize;
    shape = getShape();
    for (i$ = 0, to$ = shape.length; i$ < to$; ++i$) {
      shapeX = i$;
      for (j$ = 0, to1$ = shape.length; j$ < to1$; ++j$) {
        shapeY = j$;
        posX = getCoord(baseX, shape.size, shapeX);
        posY = getCoord(baseY, shape.size, shapeY);
        if (shape[shapeX][shapeY] === 2) {
          position[posX][posY] = 100;
        }
        if (shape[shapeX][shapeY] === 1) {
          position[posX][posY] = 0;
        }
      }
    }
  }
};
keyPressed = function(){
  noLoop();
};
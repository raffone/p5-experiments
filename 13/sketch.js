// Generated by LiveScript 1.2.0
var canvasWidth, canvasHeight, count, count2, count3, stepMax, stepMin, stepInc, stepOffset, colorRange, colorInc, setup, sinPixel, draw, keyPressed, mousePressed;
canvasWidth = 320;
canvasHeight = 200;
count = 0;
count2 = 0;
count3 = 0;
/*
drawCircle = (x0, y0, radius, color, opacity) !->

  x = radius
  y = 0
  radiusError = 1 - x

  while x >= y
    drawPixel  x + x0 ,  y + y0 , color , opacity
    drawPixel  y + x0 ,  x + y0 , color , opacity
    drawPixel -x + x0 ,  y + y0 , color , opacity
    drawPixel -y + x0 ,  x + y0 , color , opacity
    drawPixel -x + x0 , -y + y0 , color , opacity
    drawPixel -y + x0 , -x + y0 , color , opacity
    drawPixel  x + x0 , -y + y0 , color , opacity
    drawPixel  y + x0 , -x + y0 , color , opacity
    y++

    if radiusError < 0
      radiusError += 2 * y + 1;
    else
      x--
      radiusError += 2 * (y - x + 1)
*/
/*
drawPixel = (x, y, color, opacity) !->
  if x >= 0 and
     y >= 0 and
     x <= canvasWidth and
     y <= canvasHeight

    x = x * 4
    y = (y * canvasWidth) * 4

    opacity = colorRange - opacity

    pixels[x + y]     = color[0] - opacity
    pixels[x + y + 1] = color[1] - opacity
    pixels[x + y + 2] = color[2] - opacity
*/
/*
colorRGB        = [colorRange, 0, 0]
colorInc        = 4.90
colorStepCurr   = 0
colorStepCount  = 0
colorSteps      =
  [
    [0         , colorInc  , 0]
    [-colorInc , 0         , 0]
    [0         , 0         , colorInc]
    [0         , -colorInc , 0]
    [colorInc  , 0         , 0]
    [0         , 0         , -colorInc]
  ]


incrementColor = !->
  for i til colorRGB.length
   colorRGB[i] = colorRGB[i] + colorSteps[colorStepCurr][i]

  colorStepCount += colorInc

  if colorStepCount >= 256
    colorStepCount := 0
    colorStepCurr  += 1

  if colorStepCurr is colorSteps.length
    colorStepCurr := 0
*/
stepMax = 0.4;
stepMin = 0.05;
stepInc = 0.025;
stepOffset = 20;
colorRange = 255;
colorInc = colorRange / ((stepMax - stepMin) / stepInc);
setup = function(){
  createCanvas(canvasWidth, canvasHeight);
};
sinPixel = function(x, y0, color){
  var yHeightMult, yPosition, y, xOffsetMult, yOffsetMult, xOffset, yOffset;
  yHeightMult = 0 + y0 * sin(count * 0.04);
  yPosition = sin((x + count) * 0.04);
  y = height * 0.5 + (height * yHeightMult) * yPosition;
  xOffsetMult = 0.04;
  yOffsetMult = 0.02;
  xOffset = 20 + 20 * sin(count2++ * xOffsetMult);
  yOffset = 20 + 20 * cos(count2++ * yOffsetMult);
  stroke(color);
  point(x + xOffset, y + yOffset - stepOffset);
};
draw = function(){
  var i$, to$, x, color, j$, step$, to1$, i;
  background(0);
  for (i$ = -40, to$ = canvasWidth; i$ < to$; ++i$) {
    x = i$;
    color = 0;
    for (j$ = stepMin, to1$ = stepMax, step$ = stepInc; step$ < 0 ? j$ >= to1$ : j$ <= to1$; j$ += step$) {
      i = j$;
      sinPixel(x, i, color);
      color += colorInc;
    }
  }
  count++;
};
keyPressed = mousePressed = function(){
  return noLoop();
};